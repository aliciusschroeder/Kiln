name: Build Desktop Apps

on:
  push:

jobs:
  build:
    name: Build Desktop Apps
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-latest is for arm64 build, macos-13 is for x86_64
        include:
          - os: ubuntu-22.04 # x86_64 linux, oldest available GH runner. Older libc for maximal compatibility

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13

      # Use GH python version (includes TK/TCL)
      - name: Set up Python using GH python version
        run: uv venv --python 3.13 --python-preference only-system

      - name: Install the project
        run: uv sync

      # Compress MacOS app param ignored on other platforms
      - name: Build Desktop App
        run: uv run bash ./app/desktop/build_desktop_app.sh

      - name: Build Windows Installer
        if: matrix.os == 'windows-latest'
        uses: scosman/Inno-Setup-Action-Back@v1.2.5
        with:
          path: ./app/desktop/WinInnoSetup.iss

      - name: Copy Windows Installer
        if: matrix.os == 'windows-latest'
        run: cp ./app/desktop/Output/kilnsetup.exe ./app/desktop/build/dist/Kiln.Windows.Installer.exe

      # Print checksums, so anyone can verify the build

      - name: Checksums (macOS)
        if: runner.os == 'macOS'
        run: find ./app/desktop/build/dist/Kiln.app -type f -not -path "*/Contents/Resources/botocore/data/*" -exec md5 {} \;

      - name: Checksums (Linux)
        if: runner.os == 'Linux'
        run: find ./app/desktop/build/dist -type f -exec sha256sum {} \;

      - name: Checksums (Windows)
        if: runner.os == 'Windows'
        run: |
          certutil -hashfile ./app/desktop/build/dist/Kiln.Windows.Installer.exe SHA256
          certutil -hashfile ./app/desktop/build/dist/Kiln/Kiln.exe SHA256

      # MacOS apps have symlinks, and GitHub artifact upload zip will break them. Tar instead.
      - name: Compress MacOS App
        if: runner.os == 'macOS'
        working-directory: ./app/desktop/build/dist
        run: |
          echo "Compressing MacOS app"
          tar czpvf Kiln.app.tgz Kiln.app
          rm -r Kiln.app

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: kiln-desktop-${{ runner.os }}-${{ runner.arch }}
          path: ./app/desktop/build/dist/*

  test-fedora-30:
    name: Test AppRun (Fedora 30)
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Run AppRun in Fedora 30 container
        run: |
          docker run --rm \
            -e KILN_TEST_MODE=1 \
            -e DISPLAY=:0 \
            -e UID=$(id -u) \
            -e UNAME=$USER \
            -e XDG_DATA_DIRS="/usr/share:/usr/local/share" \
            -v "${PWD}/app/desktop/appimage/AppDir":/app:ro \
            -v /tmp/.X11-unix:/tmp/.X11-unix:rw \
            --cap-add=SYS_PTRACE \
            --workdir /app \
            appimagecrafters/tests-env:fedora-30 \
            ./AppRun

  test-debian-stable:
    name: Test AppRun (Debian Stable)
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Run AppRun in Debian Stable container
        run: |
          docker run --rm \
            -e KILN_TEST_MODE=1 \
            -e DISPLAY=:0 \
            -e UID=$(id -u) \
            -e UNAME=$USER \
            -e XDG_DATA_DIRS="/usr/share:/usr/local/share" \
            -v "${PWD}/app/desktop/appimage/AppDir":/app:ro \
            -v /tmp/.X11-unix:/tmp/.X11-unix:rw \
            --cap-add=SYS_PTRACE \
            --workdir /app \
            appimagecrafters/tests-env:debian-stable \
            ./AppRun

  test-ubuntu-bionic:
    name: Test AppRun (Ubuntu Bionic)
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Run AppRun in Ubuntu Bionic container
        run: |
          docker run --rm \
            -e KILN_TEST_MODE=1 \
            -e DISPLAY=:0 \
            -e UID=$(id -u) \
            -e UNAME=$USER \
            -e XDG_DATA_DIRS="/usr/share:/usr/local/share" \
            -v "${PWD}/app/desktop/appimage/AppDir":/app:ro \
            -v /tmp/.X11-unix:/tmp/.X11-unix:rw \
            --cap-add=SYS_PTRACE \
            --workdir /app \
            appimagecrafters/tests-env:ubuntu-bionic \
            ./AppRun
